<Window xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TravelCalc.Views"
        xmlns:databinding="clr-namespace:TravelCalc"
        xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"  x:Class="TravelCalc.Views.TravelWindow"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Title="TravelCalc - Путешествие"  
        MinWidth="450" Width="460" MaxHeight="720" 
        SizeToContent="Height" 
        WindowStyle="ToolWindow" WindowStartupLocation="CenterOwner">
    <Window.Resources>

        
        <!--Расположение данных в ListView-->
        <DataTemplate x:Key="TransferClassStyle">
            <StackPanel Margin="10 0 100 7">
                <Border BorderBrush="White" BorderThickness="2" CornerRadius="8" 
                        Background="{StaticResource transferBackColor}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Grid.Column="0" Grid.Row="0"
                            Style="{StaticResource IconStyle}"
                            Source="{Binding ImagePath}"
                            />
                        <TextBlock 
                            Grid.Column="1" Grid.Row="0"
                            Text="{Binding Name}" 
                            Style="{StaticResource CardHeaderTextBlockStyle}"
                            Foreground="White"/>

                        <Image  Grid.Column="0" Grid.Row="1"
                                Style="{StaticResource IconStyle}"
                                Source="/Resources/icons/clock.png"/>

                        <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"
                                    Text="{Binding GetTime}"
                                    Style="{StaticResource CardTextBlockStyle}" 
                                    Foreground="White"/>

                        <Image  Grid.Column="0" Grid.Row="2"
                                Style="{StaticResource IconStyle}"  
                                Source="/Resources/icons/notes.png"/>

                        <TextBlock Grid.Column="1" Grid.Row="2" 
                                   Text="{Binding TotalPrice}"
                                   Style="{StaticResource CardTextBlockStyle}" 
                                   Foreground="White"/>
                        <StackPanel  Orientation="Horizontal"  Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right">
                            <Button Margin="3 5"
                                Style="{StaticResource ImagineButton}" 
                                VerticalAlignment="Bottom" 
                                ToolTip="Редактировать трансфер"
                                Click="EditTravelActButton_Click">
                                <Image Source="/Resources/icons/edit.png"/>
                            </Button>
                            <Button Margin="3 5"
                                Style="{StaticResource ImagineButton}" 
                                VerticalAlignment="Bottom" 
                                ToolTip="Удалить трансфер"
                                Command="{Binding ElementName=travelActsList, Path=DataContext.RemoveCommand}"
                                    CommandParameter="{Binding }">
                                <Image Source="/Resources/icons/delete.png"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="AccommodationClassStyle">
            <StackPanel Margin="100 0 10 5">
                <Border BorderBrush="White" BorderThickness="2" CornerRadius="8" 
                        Background="{StaticResource accommodationbackColor}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Grid.Column="0" Grid.Row="0"
                            Style="{StaticResource IconStyle}"
                            Source="{Binding ImagePath}"
                            />
                        <TextBlock 
                            Grid.Column="1" Grid.Row="0"
                            Text="{Binding Name}"
                            Style="{StaticResource CardHeaderTextBlockStyle}"
                            />

                        <Image  Grid.Column="0" Grid.Row="1"
                                Style="{StaticResource IconStyle}"
                                Source="/Resources/icons/calendar.png"/>

                        <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"
                                    Text="{Binding GetTime}"
                                    Style="{StaticResource CardTextBlockStyle}" 
                                    />

                        <Image  Grid.Column="0" Grid.Row="2"
                                Style="{StaticResource IconStyle}"  
                                Source="/Resources/icons/notes.png"/>

                        <TextBlock Grid.Column="1" Grid.Row="2" 
                                    Text="{Binding TotalPrice}"
                                    Style="{StaticResource CardTextBlockStyle}" 
                                    />

                        <StackPanel Orientation="Horizontal"  Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right">
                            <Button Margin="3 5"
                                Style="{StaticResource ImagineButton}" 
                                VerticalAlignment="Bottom" 
                                ToolTip="Редактировать проживание"
                                Click="EditTravelActButton_Click">
                                <Image Source="/Resources/icons/edit.png"/>
                            </Button>
                            <Button Margin="3 5"
                                Style="{StaticResource ImagineButton}" 
                                VerticalAlignment="Bottom" 
                                ToolTip="Удалить проживание"
                                Command="{Binding ElementName=travelActsList, Path=DataContext.RemoveCommand}"
                                    CommandParameter="{Binding }">
                                <Button.Content>
                                    <Image Source="/Resources/icons/delete.png"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter/>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Кнопка добавить трансфер/проживание-->
        <Style x:Key="DropDownButtonStyle1" TargetType="{x:Type xctk:DropDownButton}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#66A1D2"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="DropDownContentBackground" Value="#66A1D2"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                            <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.IsHitTestVisible>
                                    <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <xctk:InverseBoolConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </ToggleButton.IsHitTestVisible>
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <Grid>
                                    <xctk:ButtonChrome x:Name="ToggleButtonChrome" 
                                                       BorderBrush="{TemplateBinding BorderBrush}" 
                                                       BorderThickness="{TemplateBinding BorderThickness}" 
                                                       Background="{TemplateBinding Background}" 
                                                       Foreground="{TemplateBinding Foreground}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="4,3">
                                                <Path x:Name="Arrow" Data="M0,0L3,0 4.5,1.5 6,0 9,0 4.5,4.5z" Fill="White" Height="5" Margin="0,1,0,0" Width="9"/>
                                            </Grid>
                                        </Grid>
                                    </xctk:ButtonChrome>
                                </Grid>
                            </ToggleButton>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}" Placement="{TemplateBinding DropDownPosition}" StaysOpen="False" ToolTip="" VerticalOffset="1">
                                <Popup.Resources>
                                    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
                                        <Style.Triggers>
                                            <Trigger Property="Content" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Popup.Resources>
                                <Border BorderBrush="#FFABADB3" BorderThickness="1" Background="{TemplateBinding DropDownContentBackground}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                                        <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Foreground" TargetName="ToggleButtonChrome" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="{x:Static Themes:ResourceKeys.GlyphNormalForegroundKey}" Color="White"/>

        <Style x:Key="{x:Static Themes:ResourceKeys.SpinnerButtonStyleKey}" TargetType="RepeatButton">
            <Setter Property="Background" Value="#66A1D2" />
            <Setter Property="BorderBrush" Value="#66A1D2" />
        </Style>
        
        <ControlTemplate x:Key="ControlControlTemplate1" TargetType="{x:Type Control}">
            <Border BorderThickness="2" BorderBrush="{StaticResource textBlockColor}">
                <xctk:ButtonSpinner x:Name="PART_Spinner" 
                                AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="0" 
                                    ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}" 
                                    Background="{StaticResource textBoxBackColor}" HorizontalContentAlignment="Stretch" IsTabStop="False" ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="Stretch">
                    <xctk:WatermarkTextBox x:Name="PART_TextBox" 
                                       AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}" 
                                       AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}" 
                                       AcceptsReturn="False" 
                                       BorderThickness="0" Background="Transparent" 
                                       ContextMenu="{TemplateBinding ContextMenu}" 
                                       Foreground="{StaticResource textBlockColor}" 
                                       FontWeight="{TemplateBinding FontWeight}" 
                                       FontStyle="{TemplateBinding FontStyle}" 
                                       FontStretch="{TemplateBinding FontStretch}" 
                                       FontSize="16" 
                                       FontFamily="{TemplateBinding FontFamily}" 
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       IsTabStop="True" IsUndoEnabled="True" MinWidth="20" MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="NoWrap" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"/>
                </xctk:ButtonSpinner>
            </Border>
            
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                </DataTrigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="FocusManager.FocusedElement" TargetName="PART_TextBox" Value="{Binding ElementName=PART_TextBox}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>

    <Window.Background>
        <StaticResource ResourceKey="backColor"/>
    </Window.Background>

    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Top" Margin="5 5 5 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" MinWidth="230"/>
                <ColumnDefinition Width="4*" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <xctk:WatermarkTextBox Grid.Row="0" Grid.Column="0" Watermark="Путешествие . . . "
                                Margin="5"
                                HorizontalAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                Text="{Binding Travel.Name}"
                                Foreground="White"
                                FontWeight="Medium"
                                Background="#66A1D2"    
                                BorderBrush="White"
                                BorderThickness="2"
                                FontSize="16"
                                  />

            <Grid Grid.Row="1" Grid.Column="0" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" 
                       Style="{StaticResource TextBlockStyle}"    
                       Text="Всего путешественников"/>

                <xctk:IntegerUpDown Grid.Column="1"
                    Text="{Binding Travel.People}"
                                    x:Name="travelersCount"
                                    Template="{DynamicResource ControlControlTemplate1}"
                                    Padding="10 0 0 0 "
                                    TextAlignment="Left"
                                    Minimum="1"
                                    Maximum="100"
                                    
                                    >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding UpdateTravelActsCommand}" 
                                                   CommandParameter="{Binding ElementName=travelersCount, Path=Text}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:IntegerUpDown>
            </Grid>

            <xctk:DropDownButton Grid.Column="0" Grid.Row="2"
                                     Style="{DynamicResource DropDownButtonStyle1}"
                                     Margin="5" 
                                     Width="160"
                                     HorizontalAlignment="Left">
                <xctk:DropDownButton.DropDownContent>
                    <ListBox>
                        <ListBoxItem>
                            <Button Click="AddTransfer_Click" Margin="5" Width="145" Content="ТРАНСФЕР"/>
                        </ListBoxItem>
                        <ListBoxItem>
                            <Button Click="AddAccommandation_Click" Margin="5" Width="145" Content="ПРОЖИВАНИЕ"/>
                        </ListBoxItem>
                    </ListBox>
                </xctk:DropDownButton.DropDownContent>
                <StackPanel Orientation="Horizontal">
                    <Image 
                            Source="/Resources/icons/white_plus.png"
                            Width="20" Height="20"
                            Margin="5 1 10 1"       />
                    <TextBlock 
                            Foreground="White"
                            FontSize="16"
                            FontWeight="Medium"
                            Text="ДОБАВИТЬ" />
                </StackPanel>
            </xctk:DropDownButton>

            <TextBlock Grid.Column="1" Grid.Row="0"
                       Style="{StaticResource TextBlockStyle}"
                       FontWeight="Medium"
                       Text="{Binding StringFormat=ИТОГО : {0} руб.,  Path=Travel.TotalPrice}" />
            <TextBlock Grid.Column="1" Grid.Row="1" Grid.RowSpan="2"
                       Style="{StaticResource TextBlockStyle}"
                       VerticalAlignment="Top"
                       Text="{Binding Path=Travel.Information}"/>
        </Grid>

        <ListBox   DockPanel.Dock="Top"
                   x:Name="travelActsList"
                   Background="{StaticResource listBoxBackColor}"
                   ItemsSource="{Binding Travel.Acts}"
                   Margin="0 10 0 10"
                   MaxHeight="500">
            <ListBox.ItemTemplateSelector>
                <databinding:TravelCategorySelector 
                    TransferClassStyle="{StaticResource TransferClassStyle}"
                    AccommodationClassStyle="{StaticResource AccommodationClassStyle}"/>
            </ListBox.ItemTemplateSelector>
        </ListBox>

        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="200"/>
                <ColumnDefinition Width="5*" MinWidth="230"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Content="Сохранить" Grid.Column="0" Command="{Binding SaveTravelCommand}"/>
                <Button Content="Отмена" Grid.Column="1" Command="{Binding CancelCommand}"/>
            </Grid>
            
            
        </Grid>
    </DockPanel>


</Window>
